version: "3.9"

services:
  # ────────────────── Metadata store ──────────────────
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB:      ${POSTGRES_DB}
      POSTGRES_USER:    ${POSTGRES_USER}
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  # ────────────────── Artifact store (S3 API) ─────────
  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    command: server --address ":9000" /data  \
            --console-address ":${MINIO_CONSOLE_PORT}"
    # … entrypoint stays the same, but change the mc alias target:
    entrypoint: >
      /bin/sh -c '
        minio server --address ":9000" /data --console-address ":${MINIO_CONSOLE_PORT}" &
        pid=$$!;
        sleep 5;
        mc alias set local http://127.0.0.1:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
        mc mb --ignore-existing local/${MINIO_BUCKET};
        wait $$pid
      '

    restart: always
    environment:
      MINIO_ROOT_USER:     ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 30s
      retries: 3


  # ────────────────── MLflow tracking ─────────────────
  mlflow:
    build: ./mlflow
    ports:
      - "${MLFLOW_PORT}:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AWS_ACCESS_KEY_ID:     ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_PORT}
    depends_on: [postgres, minio]
    command: >
      /bin/sh -c '
        mlflow server
          --backend-store-uri "$MLFLOW_BACKEND_STORE_URI"
          --artifacts-destination "s3://$MINIO_BUCKET"
          --serve-artifacts
          --host 0.0.0.0          # <- important
          --port 5000
          --gunicorn-opts "--bind=0.0.0.0:5000"
      '



  # ────────────────── Client image (optional) ─────────
  mlflow_client:
    image: python:3.10
    profiles: ["dev"]        # only `docker compose --profile dev up`
    command: sleep infinity  # interactive container for notebooks
    volumes:
      - ./:/workspace
    working_dir: /workspace
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:${MLFLOW_PORT}
      MLFLOW_TRACKING_USERNAME: admin
      MLFLOW_TRACKING_PASSWORD: mlflow123
      AWS_ACCESS_KEY_ID:     ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_PORT}
    tty: true

volumes:
  pgdata:
  minio_data:
