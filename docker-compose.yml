services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow"]
      interval: 10s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --address ":9000" /data --console-address ":9001"
    entrypoint: >
      /bin/sh -c '
        minio server --address ":9000" /data --console-address ":9001" &
        pid=$$!;
        until wget -qO- http://127.0.0.1:9000/minio/health/live >/dev/null 2>&1; do sleep 2; done;
        mc alias set local http://127.0.0.1:9000 minioadmin minioadmin;
        mc mb --ignore-existing local/mlflow-artifacts;
        wait $$pid
      '
    ports:
      - "5002:9000"
      - "5003:9001"
    volumes:
      - minio_data:/data

  mlflow:
    build: ./mlflow
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres:5432/mlflow
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MINIO_BUCKET: mlflow-artifacts
    depends_on:
      - postgres
      - minio
    command: >
      mlflow server
        --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow
        --artifacts-destination s3://mlflow-artifacts
        --serve-artifacts
        --host 0.0.0.0
        --port 5000

volumes:
  pgdata:
  minio_data:
